version: "3.8"

services:
  ### Dria HNSW Rust code ###
  # depends on Micro API wait-for to complete
  dria-hnsw:
    # build: ./dria_hnsw
    image: "firstbatch/dria-hnsw"
    environment:
      - REDIS_URL=redis://default:redispw@redis:6379
      - CONTRACT_ID=${CONTRACT}
    ports:
      - "8080:8080"
    depends_on:
      micro-api-wait:
        condition: service_completed_successfully

  ### Micro API 'wait-for' script ###
  # will complete when it makes sure Micro has refreshed everything
  # depends on Micro API to start
  micro-api-wait:
    # build: ./micro_api_wait
    image: "firstbatch/dria-hollowdb-wait-for"
    environment:
      - TARGET=micro-api:3000
    depends_on:
      - micro-api

  ### Micro API for HollowDB ###
  # depends on Redis to start
  micro-api:
    # build: ./micro_api
    image: "firstbatch/dria-hollowdb"
    ports:
      - "3000:3000"
    expose:
      - "3000" # used by Micro API wait-for script
    volumes:
      - ${WALLET}:/app/config/wallet.json:ro
    environment:
      - REDIS_URL=redis://default:redispw@redis:6379
      - CONTRACT_TXID=${CONTRACT}
      - USE_BUNDLR=true # true if your contract uses Bundlr
      - USE_HTX=true # true if your contract stores values as `hash.txid`
      - BUNDLR_FBS=80 # batch size for downloading bundled values from Arweave
    depends_on:
      - redis

  ### Redis Container ###
  redis:
    image: "redis:alpine"
    expose:
      - "6379"
    # prettier-ignore
    command: [
      'redis-server', 
      '--port', '6379',
      '--maxmemory', '100mb',
      '--maxmemory-policy', 'allkeys-lru',
      '--appendonly', 'no',
      '--save', '""'
    ]
